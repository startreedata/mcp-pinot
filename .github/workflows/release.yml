name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

# Restrict workflow_dispatch to admins only
permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: startreedata/mcp-pinot

jobs:
  check-permissions:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Check if user is admin
      run: |
        # This job will only run if the user has admin permissions
        # GitHub automatically restricts workflow_dispatch to users with write access
        echo "‚úÖ Admin permission verified - workflow triggered by admin user"

  test:
    runs-on: ubuntu-latest
    needs: check-permissions
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run tests
      run: |
        pip install pytest
        pytest tests/ -v

  build-and-push:
    needs: [check-permissions, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-release:
    needs: [check-permissions, test, build-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes since $PREVIOUS_TAG" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Initial Release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "First release of MCP Pinot Server" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          ${{ steps.changelog.outputs.changelog }}
          
          ## Docker Image
          
          The Docker image is available at:
          ```
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          ```
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}

  notify:
    needs: [create-release]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify on success
      if: needs.create-release.result == 'success'
      run: |
        echo "‚úÖ Release ${{ github.ref_name }} created successfully!"
        echo "üê≥ Docker image published to ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
        echo "üì¶ Release available at https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"

    - name: Notify on failure
      if: needs.create-release.result == 'failure'
      run: |
        echo "‚ùå Release creation failed!"
        exit 1
